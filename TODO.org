
* Setup Recipe
** DONE Show Passenger as an option for production web server
** DONE Ask if we are deploying to Heroku
*** DONE Do not show Passenger as an option if we are deploying to Heroku
** DONE Change development DB question to just ask about application DB?
*** DONE Remove SQLite option
** DONE Add Compass to front-end framework options
*** DONE Remove skeleton and normalize from options
** DONE Remove authorization question
** DONE Remove starter app question
** DONE Add Formtastic to form builder gems
*** TODO look into creating formtastic-specific devise pages (views recipe)
** DONE Add new option to authentication - Devise + OmniAuth
** DONE Research the right options for email sending
*** Removed email option by setting it in defaults


* DONE Add koality
* DONE Remove WEBRick from production web server choices
* DONE Remove MongoDB from DB choices
* DONE Ask about ActiveAdmin
* DONE Fix diagnostics message at end of template
* DONE Remove assets logger noise by default
* DONE Look at robots.txt and possibly remove
* DONE Remove Github repo creation
* DONE Change color scheme for questions!

* DONE Ask about exception notification
* DONE (2h) Use user's name by default for database username
* DONE Discover effective testing pattern for recipes
* DONE (2h) Create .ruby-version file
* TODO (8h) Add ability to give multiple answers
* TODO Use this for OmniAuth providers
* TODO Auto-create postgres user
* TODO Offer to cancel if DB already exists
* TODO Create mysql user in the gems recipe, similar to postgres


* TODO Port magic scrolls from Relevance-Rails
* TODO Add deploy script for Heroku if deploying to Heroku (reference tilt:config/deploy script)
* TODO Ask about background jobs/Sidekiq?
* TODO Ask about task scheduling/Whenever
* TODO Rails version should use current Rails version pinned with ~.
* TODO Nix upfront recipe-chooser menu.

* TODO Problems to be solved
 - Code not yet testable in clean, isolated way.
   - Stock layout.erb causes generator to run bundler at construction
     time, other state-changing things.
   - Testing requires shelling out to generate template, running afoul
     of user prompting.

* TODO Document
** Opting out of a prompt via YAML "unless_recipe" means that question
   will not run if the indicated recipe is present -- even if that
   recipe itself is opted out of. This means if we want no frontend
   prompt to appear if the heroku recipe is an option, but do want the
   actual frontend recipe to run promptless, the heroku recipe will
   have to set the prefs object accordingly. Which means the frontend
   recipe must be marked to run after the heroku recipe so that it can
   respond to the settings defined in the heroku recipe.

